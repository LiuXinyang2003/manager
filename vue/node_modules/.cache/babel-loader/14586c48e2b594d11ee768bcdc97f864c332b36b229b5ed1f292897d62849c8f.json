{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      socket: null,\n      messages: []\n    };\n  },\n  methods: {\n    connect() {\n      if (!this.socket) {\n        this.socket = new WebSocket('ws://your-websocket-server.com');\n        this.socket.onopen = () => {\n          console.log('Connected to WebSocket server.');\n        };\n        this.socket.onmessage = event => {\n          const message = JSON.parse(event.data);\n          this.messages.push(message);\n        };\n        this.socket.onerror = error => {\n          console.error('WebSocket Error:', error);\n        };\n        this.socket.onclose = event => {\n          console.log('WebSocket Connection Closed:', event.code, event.reason);\n          this.socket = null;\n        };\n      }\n    },\n    disconnect() {\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n        this.socket.close();\n      }\n    },\n    sendMessage() {\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n        const message = {\n          content: 'Hello, WebSocket!'\n        };\n        this.socket.send(JSON.stringify(message));\n      }\n    }\n  },\n  beforeDestroy() {\n    this.disconnect();\n  }\n};","map":{"version":3,"names":["data","socket","messages","methods","connect","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","push","onerror","error","onclose","code","reason","disconnect","readyState","OPEN","close","sendMessage","content","send","stringify","beforeDestroy"],"sources":["src/views/manager/Test.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>WebSocket Connection Example</h1>\r\n    <button @click=\"connect\">Connect</button>\r\n    <button @click=\"disconnect\">Disconnect</button>\r\n    <button @click=\"sendMessage\">Send Message</button>\r\n    <div v-if=\"messages.length\">\r\n      <h2>Received Messages:</h2>\r\n      <ul>\r\n        <li v-for=\"message in messages\" :key=\"message.id\">{{ message.content }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      socket: null,\r\n      messages: []\r\n    };\r\n  },\r\n  methods: {\r\n    connect() {\r\n      if (!this.socket) {\r\n        this.socket = new WebSocket('ws://your-websocket-server.com');\r\n\r\n        this.socket.onopen = () => {\r\n          console.log('Connected to WebSocket server.');\r\n        };\r\n\r\n        this.socket.onmessage = (event) => {\r\n          const message = JSON.parse(event.data);\r\n          this.messages.push(message);\r\n        };\r\n\r\n        this.socket.onerror = (error) => {\r\n          console.error('WebSocket Error:', error);\r\n        };\r\n\r\n        this.socket.onclose = (event) => {\r\n          console.log('WebSocket Connection Closed:', event.code, event.reason);\r\n          this.socket = null;\r\n        };\r\n      }\r\n    },\r\n    disconnect() {\r\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n        this.socket.close();\r\n      }\r\n    },\r\n    sendMessage() {\r\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n        const message = {\r\n          content: 'Hello, WebSocket!'\r\n        };\r\n        this.socket.send(JSON.stringify(message));\r\n      }\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.disconnect();\r\n  }\r\n};\r\n</script>"],"mappings":";AAgBA;EACAA,KAAA;IACA;MACAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,UAAAH,MAAA;QACA,KAAAA,MAAA,OAAAI,SAAA;QAEA,KAAAJ,MAAA,CAAAK,MAAA;UACAC,OAAA,CAAAC,GAAA;QACA;QAEA,KAAAP,MAAA,CAAAQ,SAAA,GAAAC,KAAA;UACA,MAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,KAAA,CAAAV,IAAA;UACA,KAAAE,QAAA,CAAAY,IAAA,CAAAH,OAAA;QACA;QAEA,KAAAV,MAAA,CAAAc,OAAA,GAAAC,KAAA;UACAT,OAAA,CAAAS,KAAA,qBAAAA,KAAA;QACA;QAEA,KAAAf,MAAA,CAAAgB,OAAA,GAAAP,KAAA;UACAH,OAAA,CAAAC,GAAA,iCAAAE,KAAA,CAAAQ,IAAA,EAAAR,KAAA,CAAAS,MAAA;UACA,KAAAlB,MAAA;QACA;MACA;IACA;IACAmB,WAAA;MACA,SAAAnB,MAAA,SAAAA,MAAA,CAAAoB,UAAA,KAAAhB,SAAA,CAAAiB,IAAA;QACA,KAAArB,MAAA,CAAAsB,KAAA;MACA;IACA;IACAC,YAAA;MACA,SAAAvB,MAAA,SAAAA,MAAA,CAAAoB,UAAA,KAAAhB,SAAA,CAAAiB,IAAA;QACA,MAAAX,OAAA;UACAc,OAAA;QACA;QACA,KAAAxB,MAAA,CAAAyB,IAAA,CAAAd,IAAA,CAAAe,SAAA,CAAAhB,OAAA;MACA;IACA;EACA;EACAiB,cAAA;IACA,KAAAR,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}